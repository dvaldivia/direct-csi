// +build !ignore_autogenerated

// This file is part of MinIO Kubernetes Cloud
// Copyright (c) 2020 MinIO, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageTopology) DeepCopyInto(out *StorageTopology) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageTopology.
func (in *StorageTopology) DeepCopy() *StorageTopology {
	if in == nil {
		return nil
	}
	out := new(StorageTopology)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageTopology) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageTopologyLayout) DeepCopyInto(out *StorageTopologyLayout) {
	*out = *in
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageTopologyLayout.
func (in *StorageTopologyLayout) DeepCopy() *StorageTopologyLayout {
	if in == nil {
		return nil
	}
	out := new(StorageTopologyLayout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageTopologyList) DeepCopyInto(out *StorageTopologyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageTopology, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageTopologyList.
func (in *StorageTopologyList) DeepCopy() *StorageTopologyList {
	if in == nil {
		return nil
	}
	out := new(StorageTopologyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageTopologyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageTopologyResourceLimit) DeepCopyInto(out *StorageTopologyResourceLimit) {
	*out = *in
	out.Storage = in.Storage.DeepCopy()
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageTopologyResourceLimit.
func (in *StorageTopologyResourceLimit) DeepCopy() *StorageTopologyResourceLimit {
	if in == nil {
		return nil
	}
	out := new(StorageTopologyResourceLimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageTopologySpec) DeepCopyInto(out *StorageTopologySpec) {
	*out = *in
	in.Layout.DeepCopyInto(&out.Layout)
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.ResourceLimits.DeepCopyInto(&out.ResourceLimits)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageTopologySpec.
func (in *StorageTopologySpec) DeepCopy() *StorageTopologySpec {
	if in == nil {
		return nil
	}
	out := new(StorageTopologySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageTopologyStatus) DeepCopyInto(out *StorageTopologyStatus) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Capacity.DeepCopyInto(&out.Capacity)
	out.Error = in.Error
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageTopologyStatus.
func (in *StorageTopologyStatus) DeepCopy() *StorageTopologyStatus {
	if in == nil {
		return nil
	}
	out := new(StorageTopologyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageTopologyStatusCapacity) DeepCopyInto(out *StorageTopologyStatusCapacity) {
	*out = *in
	out.FreeSpace = in.FreeSpace.DeepCopy()
	out.Total = in.Total.DeepCopy()
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageTopologyStatusCapacity.
func (in *StorageTopologyStatusCapacity) DeepCopy() *StorageTopologyStatusCapacity {
	if in == nil {
		return nil
	}
	out := new(StorageTopologyStatusCapacity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageTopologyStatusError) DeepCopyInto(out *StorageTopologyStatusError) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageTopologyStatusError.
func (in *StorageTopologyStatusError) DeepCopy() *StorageTopologyStatusError {
	if in == nil {
		return nil
	}
	out := new(StorageTopologyStatusError)
	in.DeepCopyInto(out)
	return out
}
